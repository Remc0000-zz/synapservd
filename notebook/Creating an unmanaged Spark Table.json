{
	"name": "Creating an unmanaged Spark Table",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/2de5e948-c957-42f1-9c13-477b2e5fc44a/resourceGroups/synapseNEW/providers/Microsoft.Synapse/workspaces/rvdworkspace/bigDataPools/sparkpool",
				"name": "sparkpool",
				"type": "Spark",
				"endpoint": "https://rvdworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			}
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"# Creating an unmanaged (external) Spark table\n",
					"This notebook describes how to create an unmanaged (also known as external) table from Spark. \n",
					"The table is created in /datalake/cities which may exist already (so you can attach to existing data) it can be created when you insert data."
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"CREATE TABLE cities_unmanaged (name STRING, population INT) USING PARQUET  LOCATION \\'/datalake/cities\\' OPTIONS (\\'compression\\'=\\'snappy\\')\")"
				],
				"attachments": null,
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"source": [
					"Insert a few rows into the table using a list of values.\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"source": [
					"spark.sql(\"INSERT INTO cities_unmanaged VALUES (\\'Seattle\\', 730400), (\\'San Francisco\\', 881549), (\\'Beijing\\', 21540000), (\\'Bangalore\\', 10540000)\")"
				],
				"attachments": null,
				"execution_count": 16
			},
			{
				"cell_type": "markdown",
				"source": [
					"* Retrieve values back. Click on 'Chart' below to review the visualization.\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"name"
							],
							"values": [
								"population"
							],
							"yLabel": "population",
							"xLabel": "name",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"aggData": "{\"population\":{\"Bangalore\":21080000,\"Beijing\":43080000,\"San Francisco\":1763098,\"Seattle\":1460800}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": false
					},
					"collapsed": false
				},
				"source": [
					"display(spark.sql(\"SELECT * FROM cities ORDER BY name\"))"
				],
				"attachments": null,
				"execution_count": 17
			},
			{
				"cell_type": "markdown",
				"source": [
					"Drop the table. Please note the data will remain in the data lake.\n",
					""
				],
				"attachments": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(\"DROP TABLE cities_unmanaged\")"
				],
				"attachments": null
			}
		]
	}
}